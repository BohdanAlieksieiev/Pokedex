{"version":3,"sources":["components/UI/PaginationComponent.js","api/api.js","services/Pokemons.js","components/UI/Loading.js","components/pokemon/PokemonCard.js","services/actions/pokemons.js","components/pokemon/Filter.js","pages/Index/IndexPage.js","components/layout/HeaderApp.js","router/router.js","store/Store.js","App.js","reportWebVitals.js","index.js"],"names":["PaginationComponent","state","changeSize","onChangePaginationSize","current","limit","event","a","setState","props","setPaginationLimit","onChangePagination","setPaginationCurrent","this","pagination","page","itemsCount","justify","className","defaultCurrent","total","onChange","defaultPageSize","onShowSizeChange","Component","axios","create","baseURL","getPokemons","data","API","get","offset","request","getPokemon","name","Loading","tip","size","Meta","Card","decoratedComponent","connect","pokemons","then","res","catch","err","connectDecorator","pokemon","styleWidth","imageWidth","loading","style","width","cover","height","alt","src","sprites","other","dream_world","front_default","actions","CheckOutlined","title","charAt","toUpperCase","slice","description","base_experience","FilterPokemon","getPokemonsInPage","count","console","log","results","newLimit","newPath","history","push","newCurrent","getQuery","nameQuery","search","location","URLSearchParams","setPokemonFilter","dataFilter","gutter","map","index","Header","Layout","HeaderApp","Content","RouterJS","offsetTop","path","component","IndexPage","initialState","token","localStorage","getItem","composeEnhancers","window","REDUX_DEVTOOLS_EXTENSION_COMPOSE","compose","store","createStore","action","type","setItem","payload","removeItem","applyMiddleware","thunkMiddleware","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a658ec6.chunk.js","sourcesContent":["import { Pagination, Row, Col } from 'antd';\r\nimport React, {Component} from \"react\";\r\n\r\n\r\nexport default class PaginationComponent extends Component {\r\n\r\n    state = {\r\n        changeSize: false\r\n    }\r\n\r\n    onChangePaginationSize = async (current, limit, event) => {\r\n        await this.setState({ changeSize: true })\r\n        this.props.setPaginationLimit(limit)\r\n    }\r\n\r\n    onChangePagination = (current) => {\r\n        if(!this.state.changeSize){\r\n            this.props.setPaginationCurrent(current)\r\n        }else{\r\n            this.setState({ changeSize: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { page, limit } = this.props.pagination\r\n        const { itemsCount } = this.props\r\n        return (\r\n            <>\r\n                <Row justify=\"center\" className=\"pagination-margin\">\r\n                    <Col>\r\n                        <Pagination\r\n                        defaultCurrent={page}\r\n                        total={itemsCount}\r\n                        onChange={this.onChangePagination}\r\n                        defaultPageSize={limit}\r\n                        onShowSizeChange={this.onChangePaginationSize}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: `https://pokeapi.co/api/v2/`\r\n});","import API from '../api/api'\r\n\r\nexport const getPokemons = async (data) => {\r\n    const request = await API.get('/pokemon?limit=' + data.limit + '&offset=' + data.offset, null)\r\n    return request.data\r\n}\r\n\r\nexport const getPokemon = async (name) => {\r\n    const request = await API.get('/pokemon/' + name)\r\n    return request.data\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nexport default class Loading extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"center-on-the-page\">\r\n                    <Spin\r\n                        tip=\"Loading...\"\r\n                        size=\"large\"/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport { Card, Image } from 'antd';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { getPokemon } from \"../../services/actions/pokemons\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport Loading from \"../UI/Loading\";\r\n\r\nconst { Meta } = Card;\r\nconst connectDecorator = connect(\r\n    null,\r\n    { getPokemon }\r\n);\r\n\r\nclass PokemonCard extends Component{\r\n    state = {\r\n        pokemon: null,\r\n        styleWidth: 300,\r\n        imageWidth: 300,\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPokemon()\r\n    }\r\n\r\n    getPokemon = async () => {\r\n        const res = await this.props.getPokemon(this.props.pokemon.name)\r\n        await this.setState({ pokemon: res })\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    render(){\r\n        const { loading, pokemon, styleWidth, imageWidth} = this.state\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    !loading && (\r\n                        <Card\r\n                            loading={loading}\r\n                            style={{ width: styleWidth}}\r\n                            cover={\r\n                                <>\r\n                                    {\r\n                                        loading && (\r\n                                            <Loading/>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        !loading && (\r\n                                            <Image\r\n                                                height={imageWidth}\r\n                                                alt=\"example\"\r\n                                                src={pokemon.sprites.other.dream_world.front_default}\r\n                                            />\r\n                                        )\r\n                                    }\r\n                                </>\r\n                            }\r\n                            actions={[\r\n                                <CheckOutlined key=\"accept\" />,\r\n                            ]}\r\n                        >\r\n                            <Meta\r\n                                title={pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}\r\n                                description={'Base experience: ' + pokemon.base_experience}\r\n                            />\r\n                        </Card>\r\n                    )\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst decoratedComponent = connectDecorator(PokemonCard)\r\nexport {decoratedComponent as PokemonCard};","import * as pokemons from \"../Pokemons\";\r\n\r\nexport function getPokemons(pagination) {\r\n    return async () => {\r\n        const data = {\r\n            limit: pagination.limit,\r\n            offset: pagination.page\r\n        }\r\n        let res = await pokemons.getPokemons(data).then(res => {\r\n            return res\r\n        }).catch(err => {\r\n            return err\r\n        })\r\n        return res\r\n    }\r\n}\r\n\r\nexport function getPokemon(name) {\r\n    return async () => {\r\n        let res = await pokemons.getPokemon(name).then(res => {\r\n            return res\r\n        }).catch(err => {\r\n            return err\r\n        })\r\n        return res\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class FilterPokemon extends Component{\r\n    state = {\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Row, Col  } from 'antd';\r\n\r\nimport PaginationComponent from \"../../components/UI/PaginationComponent\";\r\nimport { PokemonCard } from \"../../components/pokemon/PokemonCard\";\r\nimport Loading from \"../../components/UI/Loading\";\r\nimport { getPokemons } from \"../../services/actions/pokemons\";\r\nimport { connect } from 'react-redux';\r\nimport FilterPokemon from \"../../components/pokemon/Filter\";\r\nconst connectDecorator = connect(\r\n    null,\r\n    { getPokemons }\r\n);\r\n\r\nclass IndexPage extends Component{\r\n    state = {\r\n        loading: true,\r\n        pokemons: null,\r\n        itemsCount: 0,\r\n\r\n        pagination: {\r\n            page: 0,\r\n            limit: 20,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({\r\n            pagination: {\r\n                page: await this.getQuery('page') ? await this.getQuery('page') : 0,\r\n                limit: await this.getQuery('limit') ? await this.getQuery('limit') : 20\r\n            }\r\n        })\r\n\r\n        await this.getPokemonsInPage()\r\n\r\n\r\n        //console.log(this.props.location.query);\r\n        // this.props.history.push({\r\n        //     pathname: '/',\r\n        //     state: {\r\n        //         page:  '1',\r\n        //         limit: '10'\r\n        //     }\r\n        // })\r\n        // console.log(this.props.history.location.state);\r\n\r\n    }\r\n\r\n    getPokemonsInPage = async () => {\r\n        this.setState({ loading: true })\r\n        const res = await this.props.getPokemons(this.state.pagination)\r\n        this.setState({\r\n            itemsCount: res.count\r\n        })\r\n        console.log(this.state.pagination)\r\n        this.setState({ pokemons: res.results })\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    setPaginationLimit = (newLimit) => {\r\n        const { page } = this.state.pagination\r\n        let newPath = '/?page=' + page + '&limit=' + newLimit\r\n        this.setState({ pagination: {\r\n                ...this.state.pagination,\r\n                limit: newLimit\r\n        }})\r\n        this.props.history.push(newPath)\r\n        // console.log(this.state.pagination)\r\n        this.getPokemonsInPage()\r\n    }\r\n\r\n    setPaginationCurrent = (newCurrent) => {\r\n        const { limit } = this.state.pagination\r\n        let newPath = '/?page=' + newCurrent\r\n        newPath += (limit) ? ('&limit=' + limit) : ''\r\n        this.setState({ pagination: {\r\n                ...this.state.pagination,\r\n                page: newCurrent,\r\n        }})\r\n        this.props.history.push(newPath)\r\n\r\n        // this.props.history.push({\r\n        //     pathname: '/',\r\n        //     search: '?color=blue'\r\n        // })\r\n\r\n\r\n        this.getPokemonsInPage()\r\n    }\r\n\r\n    getQuery = (nameQuery) => {\r\n        const search = this.props.location.search;\r\n        const name = new URLSearchParams(search).get(nameQuery);\r\n        return name\r\n    }\r\n\r\n    setPokemonFilter = (dataFilter) => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { loading, pagination, pokemons, itemsCount } = this.state\r\n        return (\r\n            <>\r\n                <FilterPokemon\r\n                    setPokemonFilter={this.setPokemonFilter}\r\n                />\r\n\r\n                {\r\n                    loading && ( <Loading/> )\r\n                }\r\n\r\n                {\r\n                    !loading && (\r\n                        <>\r\n                            <Row justify=\"space-around\"  gutter={[8, 40]}>\r\n                                {\r\n                                    pokemons.map(( pokemon, index ) => {\r\n                                        return (\r\n                                            <Col key={index}>\r\n                                                <PokemonCard pokemon={pokemon} />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                            <PaginationComponent\r\n                                pagination={pagination}\r\n                                itemsCount={itemsCount}\r\n                                setPaginationLimit={this.setPaginationLimit}\r\n                                setPaginationCurrent={this.setPaginationCurrent}\r\n                            />\r\n                        </>\r\n                    )\r\n                }\r\n            </>\r\n            )\r\n        }\r\n}\r\n\r\nconst decoratedComponent = connectDecorator(IndexPage)\r\nexport {decoratedComponent as IndexPage};","import React, {Component} from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport default class HeaderApp extends Component{\r\n    render(){\r\n        return (\r\n            <>\r\n                <Header>\r\n                    <div className=\"logo\" >\r\n                        <img src=\"../../common/images/logo.png\" alt=\"Logo\"/>\r\n                    </div>\r\n                </Header>\r\n            </>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Layout, Affix } from 'antd';\r\n\r\nimport { IndexPage }  from '../pages/Index/IndexPage'\r\nimport HeaderApp from '../components/layout/HeaderApp'\r\n\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nconst { Content } = Layout;\r\n\r\n\r\nexport default class RouterJS extends Component {\r\n\r\n\r\n    render(){\r\n\r\n    return (\r\n            <BrowserRouter>\r\n                <Layout className=\"layout\">\r\n                    <Affix offsetTop={0}>\r\n                        <HeaderApp/>\r\n                    </Affix>\r\n                    <Content className=\"min-height-100vh\">\r\n                        <Switch>\r\n                            <Route path=\"/?page=:page&limit=:limit\"  component={IndexPage}/>\r\n                            <Route path=\"/page=:page\"  component={IndexPage}/>\r\n                            <Route path=\"/\"  component={IndexPage}/>\r\n                        </Switch>\r\n                    </Content>\r\n                    {/* <Footer></Footer> */}\r\n                </Layout>\r\n            </BrowserRouter>\r\n    )}\r\n}\r\n\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token')\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type){\r\n        case 'SET_TOKEN':\r\n            localStorage.setItem('token', action.payload);\r\n            state = {\r\n                ...state,\r\n                token: action.payload\r\n            }\r\n            break;\r\n        case 'REMOVE_TOKEN':\r\n            localStorage.removeItem('token');\r\n            state = {\r\n                ...state,\r\n                token: null\r\n            }\r\n            break;\r\n        default:\r\n            console.log()\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nconst composeEnhancers = window.REDUX_DEVTOOLS_EXTENSION_COMPOSE || compose;\r\n\r\nexport const store = createStore(\r\n    reducer,\r\n    composeEnhancers(applyMiddleware(thunkMiddleware)),\r\n);\r\n\r\n","import RouterJS from './router/router'\nimport 'antd/dist/antd.css';\nimport './common/scss/app.scss'\nimport { Provider } from 'react-redux'\nimport { store } from \"./store/Store\";\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <RouterJS/>\n      </Provider>\n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}